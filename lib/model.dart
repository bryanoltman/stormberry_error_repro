// This file is "model.dart"
import 'package:stormberry/stormberry.dart';
import 'package:stormberry/migrate.dart';
import 'package:stormberry_err_repro/database.schema.dart';

// Will be generated by stormberry
part 'model.schema.dart';

@Model()
abstract class User {
  @PrimaryKey()
  String get id;

  DateTime get createdAt;

  List<Post> get posts;
}

@Model()
abstract class Post {
  @PrimaryKey()
  String get id;

  String get content;

  DateTime get createdAt;
}

Future<void> migrate(Database db) async {
  // 2. Compute the schema diff between your live database schema and the generated target `schema`.
  final diff = await schema.computeDiff(db);

  // 3. (Optional) Print the schema diff to stdout.
  diff.printToConsole();

  try {
    // Always use a transaction to not break your database!!
    await db.runTx((session) async {
      // 4. Apply the necessary patches to migrate to the target schema.
      await diff.patch(session);
    });
    print('Migration succeeded');
  } catch (e) {
    print('Migration failed. All changes reverted.');
  }
}
